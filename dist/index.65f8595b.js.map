{"mappings":"AAAA,aAGA,IAYIA,OAAQC,aAAcC,aAAcC,QAZlCC,UAAYC,SAASC,cAAc,cACnCC,UAAYF,SAASC,cAAc,cACnCE,SAAWH,SAASC,cAAc,aAClCG,SAAWJ,SAASK,eAAe,YACnCC,WAAaN,SAASK,eAAe,cACrCE,WAAaP,SAASK,eAAe,cAErCG,OAASR,SAASC,cAAc,SAChCQ,OAAST,SAASC,cAAc,aAChCS,QAAUV,SAASC,cAAc,cACjCU,QAAUX,SAASC,cAAc,cAKjCW,KAAO,WACXjB,OAAS,CAAC,EAAG,GACbC,aAAe,EACfC,aAAe,EACfC,SAAU,EACVK,SAASU,YAAc,EACvBT,SAASS,YAAc,EACvBP,WAAWO,YAAc,EACzBN,WAAWM,YAAc,EAEzBL,OAAOM,UAAUC,IAAI,UACrBhB,UAAUe,UAAUE,OAAO,kBAC3Bd,UAAUY,UAAUE,OAAO,kBAC3BjB,UAAUe,UAAUC,IAAI,kBACxBb,UAAUY,UAAUE,OAAO,mBAG7BJ,OAGA,IAAMK,aAAe,WACnBjB,SAASK,eAAe,YAAyBa,OAAbrB,eAAgBgB,YAAc,EAClEjB,aAAe,EACfC,aAAgC,IAAjBA,aAAqB,EAAI,EAGxCE,UAAUe,UAAUK,OAAO,kBAC3BjB,UAAUY,UAAUK,OAAO,mBAI7BT,QAAQU,iBAAiB,SAAS,WAChC,GAAItB,QAAS,CAEX,IAAMuB,EAAOC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAG7ChB,OAAOM,UAAUE,OAAO,UACxBR,OAAOiB,IAAM,QAAaP,OAALG,EAAK,QAGb,IAATA,GAEFzB,cAA8ByB,EAC9BrB,SAASK,eAAe,YAAyBa,OAAbrB,eAAgBgB,YAClDjB,cAGFqB,mBAKNN,QAAQS,iBAAiB,SAAS,WAC5BtB,UAEFH,OAAOE,eAAiBD,aACxBI,SAASK,eAAe,UAAuBa,OAAbrB,eAAgBgB,YAChDlB,OAAOE,cAGLF,OAAOE,eAAiB,KAE1BC,SAAU,EACVU,OAAOM,UAAUC,IAAI,UACrBf,SACGC,cAAc,YAAyBiB,OAAbrB,eAC1BiB,UAAUC,IAAI,kBACjBf,SACGC,cAAc,YAAyBiB,OAAbrB,eAC1BiB,UAAUE,OAAO,mBAGpBC,mBAKNR,OAAOW,iBAAiB,QAASR","sources":["script.js"],"sourcesContent":["'use strict';\n\n// Selecting elements\nconst player0El = document.querySelector('.player--0');\nconst player1El = document.querySelector('.player--1');\nconst score0El = document.querySelector('#score--0');\nconst score1El = document.getElementById('score--1');\nconst current0El = document.getElementById('current--0');\nconst current1El = document.getElementById('current--1');\n\nconst diceEl = document.querySelector('.dice');\nconst btnNew = document.querySelector('.btn--new');\nconst btnRoll = document.querySelector('.btn--roll');\nconst btnHold = document.querySelector('.btn--hold');\n\nlet scores, currentScore, activePlayer, playing; // Scoping, will be cover in next Section\n\n//Starting Conditions\nconst init = function () {\n  scores = [0, 0]; //These scores are the ones that accumulate (big ones).\n  currentScore = 0; // Cannot be inside the function, becasue it will be set to 0 every time the roll button is clicked.\n  activePlayer = 0;\n  playing = true; // State variable. Need more clarification, what is it? Walk though the logic of using this in our code.\n  score0El.textContent = 0;\n  score1El.textContent = 0;\n  current0El.textContent = 0;\n  current1El.textContent = 0;\n\n  diceEl.classList.add('hidden');\n  player0El.classList.remove('player--winner');\n  player1El.classList.remove('player--winner');\n  player0El.classList.add('player--active');\n  player1El.classList.remove('player--active');\n};\n\ninit();\n\n// Switch to the next player function\nconst switchPlayer = function () {\n  document.getElementById(`current--${activePlayer}`).textContent = 0;\n  currentScore = 0;\n  activePlayer = activePlayer === 0 ? 1 : 0;\n\n  // Having the toggle property on both player will ensure that the player--active class will only be on one player at a time.\n  player0El.classList.toggle('player--active');\n  player1El.classList.toggle('player--active');\n};\n\n// Rolling Dice functionality\nbtnRoll.addEventListener('click', function () {\n  if (playing) {\n    // 1. Generating a random dice roll\n    const dice = Math.trunc(Math.random() * 6) + 1;\n\n    // 2. Display dice: need to remove the hidden class\n    diceEl.classList.remove('hidden');\n    diceEl.src = `dice-${dice}.png`; //dice- and .png is the same in all the image file names. Only the number (dice) changes, hence the template literal for it. Which equales to dice (the number rolled).\n\n    // 3. Check for rolled 1\n    if (dice !== 1) {\n      // Add dice to the current score\n      currentScore = currentScore + dice; // Same as currentScore += dice.\n      document.getElementById(`current--${activePlayer}`).textContent =\n        currentScore;\n    } else {\n      // Switch to the next player\n      switchPlayer();\n    }\n  }\n});\n\nbtnHold.addEventListener('click', function () {\n  if (playing) {\n    // 1. Add current score to active player's score\n    scores[activePlayer] += currentScore; // scores[1] = scores[1] + currentScore\n    document.getElementById(`score--${activePlayer}`).textContent =\n      scores[activePlayer];\n\n    // 2. Check if player's score is >= 100\n    if (scores[activePlayer] >= 100) {\n      // Finish the game\n      playing = false;\n      diceEl.classList.add('hidden');\n      document\n        .querySelector(`.player--${activePlayer}`)\n        .classList.add('player--winner');\n      document\n        .querySelector(`.player--${activePlayer}`)\n        .classList.remove('player--active');\n    } else {\n      // Switch to the next player\n      switchPlayer();\n    }\n  }\n});\n\nbtnNew.addEventListener('click', init);\n"],"names":["scores","currentScore","activePlayer","playing","player0El","document","querySelector","player1El","score0El","score1El","getElementById","current0El","current1El","diceEl","btnNew","btnRoll","btnHold","init","textContent","classList","add","remove","switchPlayer","concat","toggle","addEventListener","dice","Math","trunc","random","src"],"version":3,"file":"index.65f8595b.js.map"}